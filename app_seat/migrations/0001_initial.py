# Generated by Django 5.2.5 on 2025-08-22 19:36

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("start_datetime", models.DateTimeField()),
                ("end_datetime", models.DateTimeField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={"verbose_name_plural": "Events", "ordering": ["start_datetime"],},
        ),
        migrations.CreateModel(
            name="Row",
            fields=[
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "Rows",
                "ordering": ["section", "order", "name"],
            },
        ),
        migrations.CreateModel(
            name="SeatMap",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("data", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "verbose_name_plural": "Seat maps",
                "ordering": ["venue", "name"],
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("sort_order", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name_plural": "Sections",
                "ordering": ["venue", "sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Venue",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                ("slug", models.SlugField(max_length=255, unique=True)),
                ("address", models.TextField(blank=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={"verbose_name_plural": "Venues", "ordering": ["name"],},
        ),
        migrations.CreateModel(
            name="EventSeat",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("held", "Held"),
                            ("booked", "Booked"),
                        ],
                        default="available",
                        max_length=10,
                    ),
                ),
                ("hold_expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seats",
                        to="app_seat.event",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Event seats",
                "ordering": [
                    "event",
                    "seat__row__section",
                    "seat__row",
                    "seat__number",
                ],
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Precio total pagado por esta reserva.",
                        max_digits=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="pending",
                        help_text="Estado actual de la reserva.",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Usuario que realizó la reserva, si aplica.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bookings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="Evento para el que se reservan los asientos.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="app_seat.event",
                    ),
                ),
                (
                    "seats",
                    models.ManyToManyField(
                        help_text="Asientos del evento incluidos en la reserva.",
                        related_name="bookings",
                        to="app_seat.eventseat",
                    ),
                ),
            ],
            options={"verbose_name_plural": "Bookings", "ordering": ["-created_at"],},
        ),
        migrations.CreateModel(
            name="Hold",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        help_text="Fecha y hora en que expira la retención y los asientos vuelven a estar disponibles."
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        help_text="Evento para el que se están reteniendo asientos.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="holds",
                        to="app_seat.event",
                    ),
                ),
                (
                    "seats",
                    models.ManyToManyField(
                        help_text="Asientos del evento actualmente en espera.",
                        related_name="holds",
                        to="app_seat.eventseat",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Usuario que creó esta retención, si aplica.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="holds",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"verbose_name_plural": "Holds", "ordering": ["expires_at"],},
        ),
        migrations.CreateModel(
            name="PriceCategory",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_categories",
                        to="app_seat.event",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Price categories",
                "ordering": ["event", "name"],
                "unique_together": {("event", "name")},
            },
        ),
        migrations.AddField(
            model_name="eventseat",
            name="price_category",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="app_seat.pricecategory",
            ),
        ),
        migrations.CreateModel(
            name="Seat",
            fields=[
                ("order", models.IntegerField(default=1, verbose_name="Orden")),
                ("active", models.BooleanField(default=True, verbose_name="Activo")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Creado el"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Actualizado el"),
                ),
                (
                    "id",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=150,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("number", models.CharField(max_length=10)),
                (
                    "seat_type",
                    models.CharField(
                        choices=[
                            ("standard", "Standard"),
                            ("vip", "VIP"),
                            ("accessible", "Accessible"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                (
                    "row",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seats",
                        to="app_seat.row",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Seats",
                "ordering": ["row", "number"],
                "unique_together": {("row", "number")},
            },
        ),
        migrations.AddField(
            model_name="eventseat",
            name="seat",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event_seats",
                to="app_seat.seat",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="seatmap",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events",
                to="app_seat.seatmap",
            ),
        ),
        migrations.AddField(
            model_name="row",
            name="section",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="rows",
                to="app_seat.section",
            ),
        ),
        migrations.AddField(
            model_name="section",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sections",
                to="app_seat.venue",
            ),
        ),
        migrations.AddField(
            model_name="seatmap",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="seatmaps",
                to="app_seat.venue",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="venue",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="events",
                to="app_seat.venue",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="eventseat", unique_together={("event", "seat")},
        ),
        migrations.AlterUniqueTogether(
            name="seatmap", unique_together={("venue", "name")},
        ),
    ]
